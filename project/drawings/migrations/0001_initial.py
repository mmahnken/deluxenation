# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-08-27 22:29
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ArtistInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(help_text='Text to show for About The Artist page.')),
                ('contact', models.CharField(blank=True, help_text='Optional information to contact the artist.', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Drawing',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('title', models.CharField(blank=True, help_text='The title of the drawing.', max_length=200)),
                ('id', models.SlugField(help_text='Abbreviated code for a drawing.', max_length=20, primary_key=True, serialize=False)),
                ('favorite', models.BooleanField(default=False, help_text='If true, this is a favorite drawing in a notebook.')),
                ('image', models.ImageField(help_text='High-quality JPEG of drawing', upload_to='drawings')),
                ('description', models.TextField(blank=True, help_text='Description of the drawing')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.SlugField(help_text='Abbreviated unique code for this group.', max_length=25, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=35)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='GroupDrawing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drawing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='drawings.Drawing')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='drawings.Group')),
            ],
        ),
        migrations.CreateModel(
            name='Notebook',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.SlugField(help_text='Abbreviated code for a notebook', max_length=20, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, help_text='Optional title for noteboook.', max_length=300)),
                ('description', models.TextField(blank=True, help_text='More information about this notebook.')),
                ('front_cover', models.ImageField(help_text="Image of notebook's front cover", upload_to='notebooks')),
                ('back_cover', models.ImageField(help_text="Image of notebook's back cover", upload_to='notebooks')),
                ('drawn_at', models.DateField(blank=True, help_text='The date (month, year) when the notebook was created. Both month and year required.', verbose_name='Notebook creation month and year')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='drawing',
            name='notebook',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='drawings.Notebook'),
        ),
    ]
